---

- name: Installing furyagent
  get_url:
    url: "{{ furyagent_uri }}"
    dest: /usr/local/bin/furyagent
    mode: 0750
    force: yes

- name: Making sure all aws variables are defined
  assert:
    that:
      - aws_access_key != ""
      - aws_secret_key != ""
      - aws_region != ""
      - s3_bucket_name != ""
    msg: "aws_access_key, aws_secret_key, aws_region and s3_bucket_name must be defined"
  when: furyagent_configure_etcd or furyagent_configure_master or furyagent_configure_openvpn or furyagent_etcd_backup

- name: Making sure furyagent config directory exist on host
  file:
    path: "{{ furyagent_config_dir }}"
    state: directory
    owner: root
    group: root
    mode: 0750
  when: furyagent_configure_etcd or furyagent_configure_master or furyagent_configure_openvpn or furyagent_etcd_backup

- name: Ensuring furyagent.yml configuration is present on host
  template:
    src: furyagent.yml.j2
    dest: "{{ furyagent_config_dir }}/{{ furyagent_config_name }}"
    owner: root
    group: root
    mode: 0640
  when: furyagent_configure_etcd or furyagent_configure_master or furyagent_configure_openvpn or furyagent_etcd_backup

- name: Ensuring furyagent.yml configuration is present on localhost
  local_action: template src=furyagent.yml.j2 dest={{ secrets_path }}/{{ furyagent_config_name }}
  become: no
  run_once: true
  when: furyagent_configure_etcd or furyagent_configure_master

- name: Ensuring furyagent.yml configuration is present on localhost
  local_action: template src=furyagent.yml.j2 dest={{ secrets_path }}/openvpn-{{ furyagent_config_name }}
  become: no
  run_once: true
  when: furyagent_configure_openvpn

- name: Initialize master nodes using furyagent init master
  command: "furyagent init master --config={{ furyagent_config_dir }}/{{ furyagent_config_name }}"
  run_once: true
  ignore_errors: yes
  when: furyagent_configure_master

- name: Configuring Master node with furyagent
  command: "furyagent configure master --config={{ furyagent_config_dir }}/{{ furyagent_config_name }} --overwrite=true"
  when: furyagent_configure_master

- name: Initialize etcd using furyagent init etcd
  command: furyagent init etcd --config={{ furyagent_config_dir }}/{{ furyagent_config_name }}
  run_once: true
  ignore_errors: yes
  when: furyagent_configure_etcd

- name: Configuring Etcd node with furyagent
  command: "furyagent configure etcd --config={{ furyagent_config_dir }}/{{ furyagent_config_name }} --overwrite=true"
  when: furyagent_configure_etcd

- name: Initialize openvpn using furyagent init openvpn
  local_action: command furyagent init openvpn --config={{ secrets_path }}/openvpn-{{ furyagent_config_name }}
  become: no
  run_once: true
  ignore_errors: yes
  when: furyagent_configure_openvpn

- name: Configuring OpenVPN node with furyagent
  command: "furyagent configure openvpn --config={{ furyagent_config_dir }}/{{ furyagent_config_name }} --overwrite=true"
  when: furyagent_configure_openvpn

- name: Configuring OpenVPN cron for furyagent
  cron:
    name: "Furyagent configure openvpn from s3"
    minute: "*/5"
    job: "/usr/local/bin/furyagent configure openvpn --config={{ furyagent_config_dir }}/{{ furyagent_config_name }} --overwrite=true"
  when: furyagent_configure_openvpn

- name: Configure Etcd backup every 15 minutes with furyagent
  cron:
    minute: "*/10"
    state: present
    name: etcd-backup-furyagent
    job: "/usr/local/bin/furyagent backup etcd --config={{ furyagent_config_dir }}/{{ furyagent_config_name }} > /var/log/furyagent.log"
  when: furyagent_etcd_backup
